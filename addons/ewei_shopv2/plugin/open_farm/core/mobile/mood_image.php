<?php/* * 人人商城 * * 青岛易联互动网络科技有限公司 * http://www.we7shop.cn * TEL: 4000097827/18661772381/15865546761 */class MoodImage {    /**     * 传入路径返回图像资源     * @param string $path     * @return resource|null     */    public static function getFileImg($path) {        // 获取文件信息        $pathInfo = pathinfo($path);        // 初始图片资源为空        $image = null;        // 判断文件类型读取文件        switch ($pathInfo['extension']) {            case 'jpg':                // jpg 读取方法                $image = imagecreatefromjpeg($path);                break;            case 'png':                // png 读取方法                $image = imagecreatefrompng($path);                break;            default:                // 字符串 读取方法                $image = imagecreatefromstring(file_get_contents($path));                break;        }        return $image;    }    /**     * 根据文件地址获取初始化的图片资源     * 并设置背景和透明度     * @param $path     * @return resource     */    public static function initialFileBackground($path) {        // 图片资源        $image = self::getFileImg($path);        // 设置背景颜色        imagecolorallocatealpha($image, 255, 255, 255, 255);        return $image;    }    /**     * 获取字符串起始位置     * @param $totalLength     * @param $byteLength     * @param $emptyLength     * @param $str     * @return float|int     */    public static function getStrStart($totalLength, $byteLength, $emptyLength, $str) {        $width = mb_strwidth($str);        $length = mb_strlen($str);        return ($totalLength - ($width * $byteLength + $length * $emptyLength)) / 2;    }    /**     * 计算图片最居中的起始位置     * @param $overallLength     * @param $insideLength     * @return float|int     */    public static function getImageLength($overallLength, $insideLength) {        return ($overallLength - $insideLength) / 2;    }    /**     * 运行主方法     * @param $backgroundPath     * @param $picturePath     * @param $portraitPath     * @param $qrCodePath     * @param $nickname     * @param $autograph     * @param $save     * @param bool $savePath     */    public static function main($backgroundPath, $picturePath, $portraitPath, $qrCodePath, $nickname, $autograph, $save = false, $savePath = false) {        if (!$save) {            // 告诉浏览器这个页面是个html代码,编码格式是utf-8            header("Content-Type:text/html; charset=utf-8");            // 告诉浏览器,这是一张图片,图片的格式是png            header("Content-type:image/png");        }        // 获取图片资源        $backgroundImage = self::initialFileBackground($backgroundPath);        // 获取背景的宽高        list($backgroundWidth, $backgroundHeight) = getimagesize($backgroundPath);        // 生成图片        $pictureImage = self::getFileImg($picturePath);        // 获取图片宽高        list($pictureWidth, $pictureHeight) = getimagesize($picturePath);        // 照片开始位置        $pictureStart = self::getImageLength($backgroundWidth, $pictureWidth);        // 合并图片        imagecopymerge($backgroundImage, $pictureImage, $pictureStart, 40, 0, 0, $pictureWidth, $pictureHeight, 100);        // 获取头像        $portraitImage = self::getFileImg($portraitPath);        // 获取当前头像的宽高        list($portraitWidth, $portraitHeight) = getimagesize($portraitPath);        // 头像开始位置        $portraitStart = self::getImageLength($backgroundWidth, $portraitWidth);        // 取最小的长度        $portraitWidth = $portraitWidth <= $portraitHeight ? $portraitWidth : $portraitHeight;        // 圆半径        $r = $portraitWidth / 2;        // 循环读取原图片每个像素点颜色,画在新的画布上        for ($x = 0; $x < $portraitWidth; $x++) {            for ($y = 0; $y < $portraitHeight; $y++) {                // 读取源图片像素                $rgbColor = imagecolorat($portraitImage, $x, $y);                // 判断位置                if (((($x - $r) * ($x - $r) + ($y - $r) * ($y - $r)) < ($r * $r))) {                    // 把像素颜色填充上                    imagesetpixel($backgroundImage, $x + $portraitStart, $y + 341, $rgbColor);                }            }        }        // 字体文件夹        $fontFolder = __DIR__ . '/../../static/mobile/font/';        // 图片总宽度        $overallLength = $backgroundWidth;        // 间隔宽度        $emptyLength = 6;        // 文字宽度        $wordLength = 14;        // 昵称起始位置        $nicknameStart = self::getStrStart($overallLength, $wordLength, $emptyLength, $nickname);        // 设置昵称        // 设置字体颜色        $nicknameColor = imagecolorallocate($backgroundImage, 0, 0, 0);        // 设置字体文件        $fontFile = $fontFolder . '/PingFangMedium.ttf';        // 把文字写到图片上         imagettftext($backgroundImage, 24, 0, $nicknameStart, 520, $nicknameColor, $fontFile, $nickname);        // 文字宽度        $wordLength = 9;        // 间隔        $emptyLength = 6;        // 签名起始位置        $autographStart = self::getStrStart($overallLength, $wordLength, $emptyLength, $autograph);        // 个性签名        // 设置字体颜色        $autographColor = imagecolorallocate($backgroundImage, 0, 0, 0);        // 设置字体文件        $fontFile = $fontFolder . '/PingFangRegular.ttf';        // 把文字写到图片上        imagettftext($backgroundImage, 18, 0, $autographStart, 560, $autographColor, $fontFile, $autograph);        // 生成图片        $qrCodeImage = self::getFileImg($qrCodePath);        // 获取二维码宽高        list($qrCodeWidth, $qrCodeHeight) = getimagesize($qrCodePath);        // 二维码开始位置        $qrCodeStart = self::getImageLength($backgroundWidth, $qrCodeWidth);        // 复制图片        imagecopymerge($backgroundImage, $qrCodeImage, $qrCodeStart, 599, 0, 0, $qrCodeWidth, $qrCodeHeight, 100);        if ($save && $savePath) {            // 生成图片            imagepng($backgroundImage, $savePath);        } else {            // 生成图片            imagepng($backgroundImage);        }        // 销毁图片,释放内存        imagedestroy($pictureImage);        imagedestroy($portraitImage);        imagedestroy($qrCodeImage);        imagedestroy($backgroundImage);    }}